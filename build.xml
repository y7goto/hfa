<?xml version="1.0" encoding="UTF-8"?>

<!--
 * Copyright (c) 2005 HyperFun Project.
 * All rights reserved.
 *
 * This program can be redistributed and/or modified under the terms
 * of the CGPL, The Common Good Public License as published by and at CGPL.org
 * (http://CGPL.org).  It is released under version 1.0 Beta of the License 
 * until the 1.0 version is released after which either version 1.0 of the
 * License, or (at your option) any later version can be applied.
 *
 * THIS WORK, OR SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED 
 * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED (See the
 * CGPL, The Common Good Public License for more information.)
 *
 * You should have received a copy of the CGPL along with this program;
 * if not, see -  http://CGPL.org to get a copy of the License.
 *
 * $Id: build.xml,v 1.3 2006/02/02 01:33:26 y7goto Exp $
-->

<project name="HyperFun Applet" default="jar" basedir=".">
    <property name="name" value="hyperfun_applet" />
    <property name="build.dir" value="build" />

    <!-- A directory where generated Java files go -->
    <property name="build.src" value="${build.dir}/src" />

    <property name="classes.dir" value="${build.dir}/classes" />
    <property name="lib.dir" value="lib" />
    <property name="src.dir" value="src" />

    <property name="debug" value="false" />
    <property name="deprecation" value="false" />

    <!-- Jar files needed to build the HyperFun Applet -->
    <property name="JLex.jar" value="${lib.dir}/JLex.jar" />
    <property name="java_cup.jar" value="${lib.dir}/java_cup.jar" />
    <property name="bcel.jar" value="${lib.dir}/bcel-5.1.jar" />

    <path id="project.class.path">
        <fileset dir="${lib.dir}" includes="**/*.jar" />
        <pathelement location="${classes.dir}" />
    </path>

    <target name="prepare">
        <mkdir dir="${classes.dir}" />

        <!--
            Create a directory where the generated Java files of lexical
            analyzer and parser go, and copy the JLex and CUP specification
            files into it.
        -->
        <mkdir dir="${build.src}/org/hyperfun/EmpiricalHyperFun" />

        <copy file="${src.dir}/org/hyperfun/EmpiricalHyperFun/HyperFun.jl"
              tofile="${build.src}/org/hyperfun/EmpiricalHyperFun/HyperFun.jl" />
        <copy file="${src.dir}/org/hyperfun/EmpiricalHyperFun/HyperFun.cup"
              tofile="${build.src}/org/hyperfun/EmpiricalHyperFun/HyperFun.cup" />
    </target>

    <target name="compile" depends="prepare">

        <!-- Generate a Java file from the JLex specification file -->
        <java dir="${build.src}/org/hyperfun/EmpiricalHyperFun"
              failonerror="true"
              fork="true"
              jar="${JLex.jar}">
            <arg value="HyperFun.jl" />
        </java>

        <!-- Rename the file generated by JLex -->
        <move file="${build.src}/org/hyperfun/EmpiricalHyperFun/HyperFun.jl.java"
              tofile="${build.src}/org/hyperfun/EmpiricalHyperFun/Yylex.java" />

        <!-- Generate a Java file from the CUP specification file -->
        <java dir="${build.src}/org/hyperfun/EmpiricalHyperFun"
              failonerror="true"
              fork="true"
              jar="${java_cup.jar}">
            <arg line="-parser Parser -symbols Sym HyperFun.cup" />
        </java>

        <!-- Compile java files under the ${src.dir} and ${build.src} directories -->
        <javac destdir="${classes.dir}"
               debug="${debuf}"
               deprecation="${deprecation}">
            <classpath refid="project.class.path" />
            <patternset>
                <include name="**/*.java" />
            </patternset>
            <src path="${src.dir}" />
            <src path="${build.src}" />
        </javac>
    </target>

    <!-- Create the hyperfun_applet jar file -->
    <target name="jar" depends="compile">
        <!-- Extract jar files which hyperfun_applet depends on -->
        <unjar src="${java_cup.jar}" dest="${classes.dir}" />
        <unjar src="${bcel.jar}" dest="${classes.dir}" />

        <!-- Delete unnecessary classes in java_cup -->
        <delete>
            <fileset dir="${classes.dir}/java_cup">
                <exclude name="runtime/**" />
            </fileset>
        </delete>

        <!-- Clean META-INF directory -->
        <delete includeEmptyDirs="true">
            <fileset dir="${classes.dir}/META-INF" includes="**/*" />
        </delete>

        <!-- Copy license files to META-INF directory -->
        <copy todir="${classes.dir}/META-INF" file="${lib.dir}/LICENSE.CUP.txt" />
        <copy todir="${classes.dir}/META-INF" file="${lib.dir}/LICENSE.bcel.txt" />
	<copy todir="${classes.dir}/META-INF" file="${src.dir}/org/hyperfun/gui/LICENSE.ExampleFileFilter.txt" />
        <copy todir="${classes.dir}/META-INF" file="LICENSE.txt" />

        <jar basedir="${classes.dir}"
             compress="true"
             destfile="${build.dir}/${name}.jar"
             manifest="${src.dir}/MANIFEST.MF" />
    </target>

    <target name="javadoc" depends="prepare">
        <echo message="javadoc target has not been impremented yet." />
    </target>

    <!-- Delete all files under ${build.dir} -->
    <target name="clean">
        <delete dir="${build.dir}" />
    </target>
</project>
